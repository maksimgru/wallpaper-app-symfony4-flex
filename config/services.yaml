# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    wallpaper_basedir: '%kernel.project_dir%/public/images/'
    admin_email: '%env(ADMIN_EMAIL)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones


    App\Security\AuthenticationSuccessHandler:
        public: true
        arguments:
            - "@security.http_utils"
            - []
            - "@security.token_storage"
            - "@session.flash_bag"

    App\Security\AuthenticationFailureHandler:
        public: true
        arguments:
            - "@http_kernel"
            - "@security.http_utils"
            - []
            - '@Psr\Log\LoggerInterface'
            - "@session.flash_bag"



    # makes classes in src/App/DataFixtures available to be used as services
    # and have a tag that allows actions to type-hint services
    App\DataFixtures\ORM\LoadWallpaperFixtures:
        arguments:
            - '%wallpaper_basedir%'
        public: true
        tags:
            - { name: 'doctrine.fixture.orm' }

    App\DataFixtures\ORM\LoadCategoryFixtures:
        public: true
        tags:
            - { name: 'doctrine.fixture.orm' }

    App\Command\SetupWallpapersCommand:
        arguments:
            - '%wallpaper_basedir%'
            - '@doctrine.orm.default_entity_manager'
        public: true
        tags:
            - { name: 'console.command' }

    App\Service\LocalFilesystemFileMover:
        public: true
        arguments:
            - '@filesystem'

    App\Service\LocalFilesystemFileDeleter:
        public: true
        arguments:
            - '@filesystem'
            - '%wallpaper_basedir%'

    App\Service\ImageFileDimensionsHelper:
        public: true

    App\Service\WallpaperFilePathHelper:
        public: true
        arguments:
            - '%wallpaper_basedir%'

    App\Event\Listener\WallpaperListener:
        public: true
        arguments:
            - '@App\Service\LocalFilesystemFileMover'
            - '@App\Service\LocalFilesystemFileDeleter'
            - '@App\Service\WallpaperFilePathHelper'
            - '@App\Service\ImageFileDimensionsHelper'
        tags:
            - { name: 'doctrine.event_listener', event: prePersist }
            - { name: 'doctrine.event_listener', event: preUpdate }
            - { name: 'doctrine.event_listener', event: preRemove }